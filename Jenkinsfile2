/* Author: Jospin Anogo   anogoj@gmail.com 
prérequis: configure une variable "DOCKER_PASSWORD" dans les paramêtres du serveur jenkins*/

def DOCKER_ID = "anogo"
def IMAGE_NAME = "house-innovation"
def IMAGE_TAG_DEV = DOCKER_ID+"/"+IMAGE_NAME+"-dev:$BUILD_ID"
def IMAGE_TAG_PROD = DOCKER_ID+"/"+IMAGE_NAME+"-prod:$BUILD_ID"
def REPOSITORY = "https://github.com/Tajjospin/house_innovation.git"
def PortApp = 80
def PortContainer = 8200

pipeline{
    agent any
  stages{

    /*stage('Clone Repository'){
        steps{
            git (branch: 'main', credentialsId: credential, url: repository)
        }
    }*/

    stage('Build Docker Image'){
        steps{
            script{
                sh "docker build -t ${IMAGE_TAG_DEV} ."
            }
        }
    }

    stage('Test acceptance'){
        steps{
            script{
                
                sh "docker run --name ${IMAGE_NAME}${BUILD_ID} -d -p ${PortContainer}:${PortApp} ${IMAGE_TAG_DEV}"
                sh "curl localhost:${PortContainer} | grep -q 'Author: Roody95'"
                sh "docker stop ${IMAGE_NAME}${BUILD_ID}"
                sh "docker rm ${IMAGE_NAME}${BUILD_ID}"

            }
        }
    }

    stage('test vulnerabilte image'){
        steps{
            script{
                echo 'nous cherchons comment intégrer le test'
            }
        }
    }
    stage('Push sur dockerhub'){
        steps{
            script{
              
                sh "docker login -u ${DOCKER_ID} -p ${DOCKER_PASSWORD}"
                sh "docker push ${IMAGE_TAG_DEV}"
                 
            }
        }
    }

    stage('supression des images en local'){
          steps{
            script{
              sh '''docker images |grep "'''+DOCKER_ID+'''" | awk '{ print $3 }' | xargs --no-run-if-empty docker rmi -f'''
              sh '''docker images | awk '/^<none>/ { print $3 }' | xargs --no-run-if-empty docker rmi -f'''
              sh 'echo "image suprimé"'
            }
          }
        }


}
}